#!/usr/bin/env python3 
import nmap
import json
import os

# Function to scan ports using Nmap
def scan_ports(target, port_range):
    nm = nmap.PortScanner()
    print(f"Scanning {target} for open ports in range {port_range}...")
    
    try:
        nm.scan(target, port_range)
    except Exception as e:
        print(f"Error during scan: {e}")
        return []

    open_ports = []
    for host in nm.all_hosts():
        if 'tcp' in nm[host]:
            for port in nm[host]['tcp']:
                if nm[host]['tcp'][port]['state'] == 'open':
                    open_ports.append({
                        'port': port,
                        'state': nm[host]['tcp'][port]['state'],
                        'service': nm[host]['tcp'][port]['name']
                    })

    if not open_ports:
        print(f"No open ports found on {target}.")
    
    return open_ports

# Function to save port scan results to JSON
def save_port_scan_to_json(target, port_range):
    results = scan_ports(target, port_range)
    
    # Check if results exist
    if not results:
        print("No results to save.")
        return
    
    # Ensure 'reports' directory exists
    if not os.path.exists('reports'):
        os.makedirs('reports')
    
    # Write the results to a JSON file
    filename = 'reports/port_scan_results.json'
    with open(filename, 'w') as json_file:
        json.dump(results, json_file, indent=4)
    
    print(f"Port scan results saved to {filename}.")

if __name__ == '__main__':
    target_ip = input("Enter target IP: ")
    port_range = input("Enter port range (e.g., 20-80): ")
    
    # Save the results to a JSON file
    save_port_scan_to_json(target_ip, port_range)
