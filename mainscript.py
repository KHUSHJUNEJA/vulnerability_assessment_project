#!/usr/bin/env python3
import json
import os
# Import the functions from other scripts
from port_scan import save_port_scan_to_json
from web_scan import save_nikto_scan_to_json
from system_scan import run_openvas_scan  # Assuming OpenVAS function is named like this

def combine_results():
    # Example usage: calling the functions from the other files
    target_ip = input("Enter target IP: ")
    target_url = f"http://{target_ip}"  # Assuming the target URL is based on IP
    port_range = input("Enter port range (e.g., 20-100): ")

    # Run port scan and save results to JSON
    print("Running port scan...")
    save_port_scan_to_json(target_ip, port_range)

    # Run web vulnerability scan using Nikto and save results to JSON
    print("Running Nikto web scan...")
    save_nikto_scan_to_json(target_url)

    # Run system scan with OpenVAS (provide necessary credentials)
    gvm_url = input("Enter GVM API URL: ")
    gvm_username = input("Enter GVM username: ")
    gvm_password = input("Enter GVM password: ")
    print("Running OpenVAS system scan...")
    run_openvas_scan(target_ip, gvm_url, gvm_username, gvm_password)

    # Load and combine results into a unified report
    try:
        with open('port_scan_results.json', 'r') as port_file:
            port_results = json.load(port_file)
    except FileNotFoundError:
        print("Error: Port scan results not found.")
        return

    try:
        with open('nikto_scan_results.json', 'r') as nikto_file:
            nikto_results = json.load(nikto_file)
    except FileNotFoundError:
        print("Error: Nikto scan results not found.")
        return

    try:
        with open('openvas_scan_results.json', 'r') as openvas_file:
            openvas_results = json.load(openvas_file)
    except FileNotFoundError:
        print("Error: OpenVAS scan results not found.")
        return

    # Combine results and output them to a new JSON file
    combined_results = {
        'port_scan': port_results,
        'nikto_scan': nikto_results,
        'openvas_scan': openvas_results
    }

    # Ensure the 'reports' directory exists
    if not os.path.exists('reports'):
        os.makedirs('reports')

    with open('reports/combined_vulnerability_report.json', 'w') as combined_file:
        json.dump(combined_results, combined_file, indent=4)

    print("Combined vulnerability report saved as reports/combined_vulnerability_report.json")

if __name__ == '__main__':
    combine_results()
